
Possible performance improvement for finding cells of Mgr
Try to improve efficiency of unmatched cell generation. When generating the next level of potential unmatched cells, assigning a set/list of potential $L$-values for these. Do this based on the crossings of which a closed circles it hits. When killing pairs of cells, match only on values based on this list. 
Using this improvement, try to get a conjecture on Torus links, specifically 5 strand. Run reasonably high values in jumps of 5 and plug the number of cells into OEIS.
If this is succesful, conjecture that the torus braid T(n,m) with m strands fixed has O(x^(floor(n/2))) cells for large n.

Make a github for this article and mimic Lukas's github

Clean up code

Do the required results for the paper


get statistics while running:
python3 -m cProfile -s time braidalgo.py abcabcabcabcabcabc

interesting braid? 

s_1^2s_2^2s_1^3s_2^2s_1s_3s_2^2s_4^2s_3s_1^2s_2^2s_1^3s_2^3s_1^2s_3s_2^2s_4^3s_3^2
=aabbaaabbacaaddcaabbaaabbbaacbbdddcc 




cli k√§liin
vaihtoehtoja:

- flagiksi --output "file"
- syklisyys --acyclic
- solut --cells
- polut --paths
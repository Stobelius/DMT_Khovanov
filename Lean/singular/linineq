import Mathlib.Algebra.Order.Ring.Star
import Mathlib.Analysis.Normed.Field.Lemmas
import Mathlib.Data.Rat.Star

def tA (n : ℚ) (h q : ℚ) : ℚ := (-1/2) * n + 1/2 * h - 1/4 * q - 1
def tB (n : ℚ) (h q : ℚ) : ℚ := 3 * n - 3/2 * h + q - 5/2
def tC (n : ℚ) (h q : ℚ) : ℚ := (-9/4) * n + h - 3/4 * q - 1/4

lemma lemma_6_2_case_two (n : ℚ) (h₁ h₂ q₁ q₂ : ℚ)
    (htA₁ : (-3/2) ≤ tA n h₁ q₁) (htA₁' : tA n h₁ q₁ < 2)
    (htC₁ : (-3/2) ≤ tC n h₁ q₁)
    (htA₂ : (-3/2) ≤ tA n h₂ q₂)
    (htC₂ : (-3/2) ≤ tC n h₂ q₂) (htC₂' : tC n h₂ q₂ < 2)
    (hh : h₁ + 1 = h₂) (hn : 83 ≤ n) (hq : q₁ ≤ q₂) :
    2 ≤ tB n h₁ q₁ := by
  rw [tA, tB, tC] at *
  linarith

lemma lemma_6_2_case_two' (n : ℚ) (h₁ h₂ q₁ q₂ : ℚ)
    (htA₁ : (-3/2) ≤ tA n h₁ q₁) (htA₁' : tA n h₁ q₁ < 2)
    (htC₁ : (-3/2) ≤ tC n h₁ q₁)
    (htA₂ : (-3/2) ≤ tA n h₂ q₂)
    (htC₂ : (-3/2) ≤ tC n h₂ q₂) (htC₂' : tC n h₂ q₂ < 2)
    (hh : h₁ + 1 = h₂) (hn : 83 ≤ n) (hq : q₁ ≤ q₂) :
    2 ≤ tB n h₂ q₂ := by
  rw [tA, tB, tC] at *
  linarith
